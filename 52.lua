local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local player = players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
if not character:FindFirstChild("HumanoidRootPart") then
    character:WaitForChild("HumanoidRootPart")
end

-- –í–∫–ª—é—á–∞–µ–º NoClip –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–ª–µ—Ç
local function enableFlight()
    local hrp = character.HumanoidRootPart
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    
    -- –û—Ç–∫–ª—é—á–∞–µ–º –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é –∏ –∫–æ–ª–ª–∏–∑–∏–∏
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
            part.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
            part.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
        end
    end
    
    -- –û—Ç–∫–ª—é—á–∞–µ–º –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é —É HRP
    hrp:SetNetworkOwner(nil)
    
    if humanoid then
        humanoid.PlatformStand = true -- –û—Ç–∫–ª—é—á–∞–µ–º —Ñ–∏–∑–∏–∫—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    end
    
    print("üöÄ –†–µ–∂–∏–º –ø–æ–ª–µ—Ç–∞ –≤–∫–ª—é—á–µ–Ω - —Ç–µ–ª–æ –ª–µ—Ç–∏—Ç –≤–º–µ—Å—Ç–µ —Å –∫–∞–º–µ—Ä–æ–π")
end

-- –í–∫–ª—é—á–∞–µ–º –ø–æ–ª–µ—Ç
enableFlight()

-- –ü–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º NoClip
local noclipConnection
noclipConnection = RunService.Stepped:Connect(function()
    if character and character:FindFirstChild("HumanoidRootPart") then
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
                part.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                part.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
            end
        end
    else
        noclipConnection:Disconnect()
    end
end)

-- –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–æ–ª–µ—Ç–∞ —Ç–µ–ª–∞ –∫ —Ü–µ–ª–∏
local function smoothBodyFlyToPosition(targetPosition)
    local hrp = character.HumanoidRootPart
    local startPosition = hrp.Position
    local distance = (targetPosition - startPosition).Magnitude
    local duration = math.max(4, distance / 8) -- –ï—â–µ –±–æ–ª–µ–µ –ø–ª–∞–≤–Ω–æ
    
    local startTime = tick()
    
    while tick() - startTime < duration do
        local elapsed = tick() - startTime
        local progress = elapsed / duration
        
        -- –ü–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ —Å easing (–¥–ª—è –±–æ–ª–µ–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª–µ—Ç–∞)
        local easedProgress = 1 - (1 - progress) * (1 - progress) -- –ö–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–µ easing
        local currentPosition = startPosition:Lerp(targetPosition, easedProgress)
        
        -- –î–≤–∏–≥–∞–µ–º –í–°–ï —Ç–µ–ª–æ, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ HRP
        hrp.Position = currentPosition
        
        -- –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
        RunService.Heartbeat:Wait()
    end
    
    -- –§–∏–Ω–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
    hrp.Position = targetPosition
    print("‚úÖ –ü–æ–ª–µ—Ç —Ç–µ–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω")
end

local bases = Workspace:WaitForChild("Bases")

for _, base in ipairs(bases:GetChildren()) do
    if base:IsA("Model") then
        local slots = base:FindFirstChild("Slots")
        if slots then
            for _, slot in ipairs(slots:GetChildren()) do
                for _, model in ipairs(slot:GetChildren()) do
                    if model:IsA("Model") and string.match(string.lower(model.Name), " femboy$") then
                        -- –ù–∞—Ö–æ–¥–∏–º –ø–æ–∑–∏—Ü–∏—é –º–æ–¥–µ–ª–∏
                        local modelPosition
                        if model.PrimaryPart then
                            modelPosition = model.PrimaryPart.Position
                        else
                            local minX, maxX, minY, maxY, minZ, maxZ = math.huge, -math.huge, math.huge, -math.huge, math.huge, -math.huge
                            for _, part in ipairs(model:GetDescendants()) do
                                if part:IsA("BasePart") then
                                    local pos = part.Position
                                    minX, maxX = math.min(minX, pos.X), math.max(maxX, pos.X)
                                    minY, maxY = math.min(minY, pos.Y), math.max(maxY, pos.Y)
                                    minZ, maxZ = math.min(minZ, pos.Z), math.max(maxZ, pos.Z)
                                end
                            end
                            modelPosition = Vector3.new((minX + maxX) / 2, (minY + maxY) / 2, (minZ + maxZ) / 2)
                        end
                        
                        local targetPos = modelPosition + Vector3.new(0, 3, 0)
                        print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–µ—Ç —Ç–µ–ª–∞ –∫:", model.Name)
                        smoothBodyFlyToPosition(targetPos)
                        print("‚úÖ –ü–æ–ª–µ—Ç –∫ –º–æ–¥–µ–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω:", model.Name)
                        return
                    end
                end
            end
        end
    end
end

warn("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –º–æ–¥–µ–ª–µ–π, –æ–∫–∞–Ω—á–∏–≤–∞—é—â–∏—Ö—Å—è –Ω–∞ 'Femboy'")
